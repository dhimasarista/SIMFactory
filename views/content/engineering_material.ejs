<div class="row">
    <div class="col-12">
       <div class="card border-0">
          <div class="card-header " style="display: flex; justify-content: space-between; align-items: center;">
             <h3 class="card-title">Materials</h3>
             <span style="margin-left: auto;">
             <button type="button" class="btn btn-secondary" id="newButton">
             New
             </button>
             <button type="button" class="btn btn-secondary" id="materialButton" style="display: none;" onclick="clearForm()"> 
             Departments
             </button>
             <button type="button" class="btn btn-secondary" onclick="printContent()">
             Print
             </button>
             </span>
          </div>
          <!-- /.card-header -->
          <div class="card-body p-0 my-2 mx-4" id="materialTable">
             <div class="table-responsive">
                <table class="table m-0 table-borderless table-hover table-sm" id="material">
                   <thead>
                      <tr>
                         <th>Code S/N</th>
                         <th>Name</th>
                         <th>Manufacturer</th>
                         <th></th>
                      </tr>
                   </thead>
                   <tbody id="departmentTableBody">
                     <% data.forEach((material) => { %>
                      <tr id="material-<%- material.id %>">
                         <td><%- material.id %></td>
                         <td><a href="#"><%- material.name %></a></td>
                         <td><%- material.manufacturer %></td>
                         <td style="display: flex; justify-content: flex-end;">
                           <a href="#" class="mt-1 mr-1 badge badge-secondary" id="employee-profile-button" onclick="">
                              <i>
                                 <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="white" d="M17.75 20.25q-1.575 0-2.663-1.088T14 16.5q0-1.575 1.088-2.663t2.662-1.087q1.575 0 2.663 1.088T21.5 16.5q0 1.575-1.088 2.663T17.75 20.25ZM4 17.5v-2h8v2H4Zm2.25-6.25q-1.575 0-2.663-1.088T2.5 7.5q0-1.575 1.088-2.663T6.25 3.75q1.575 0 2.663 1.088T10 7.5q0 1.575-1.088 2.663T6.25 11.25ZM12 8.5v-2h8v2h-8Z"/></svg>
                              </i>
                           </a>
                            <a href="#" class="mt-1 mr-1 badge badge-warning">
                               <i>
                                  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                                     <g fill="none">
                                        <path d="M24 0v24H0V0h24ZM12.593 23.258l-.011.002l-.071.035l-.02.004l-.014-.004l-.071-.035c-.01-.004-.019-.001-.024.005l-.004.01l-.017.428l.005.02l.01.013l.104.074l.015.004l.012-.004l.104-.074l.012-.016l.004-.017l-.017-.427c-.002-.01-.009-.017-.017-.018Zm.265-.113l-.013.002l-.185.093l-.01.01l-.003.011l.018.43l.005.012l.008.007l.201.093c.012.004.023 0 .029-.008l.004-.014l-.034-.614c-.003-.012-.01-.02-.02-.022Zm-.715.002a.023.023 0 0 0-.027.006l-.006.014l-.034.614c0 .012.007.02.017.024l.015-.002l.201-.093l.01-.008l.004-.011l.017-.43l-.003-.012l-.01-.01l-.184-.092Z"/>
                                        <path fill="currentColor" d="M13 3a1 1 0 0 1 .117 1.993L13 5H5v14h14v-8a1 1 0 0 1 1.993-.117L21 11v8a2 2 0 0 1-1.85 1.995L19 21H5a2 2 0 0 1-1.995-1.85L3 19V5a2 2 0 0 1 1.85-1.995L5 3h8Zm6.243.343a1 1 0 0 1 1.497 1.32l-.083.095l-9.9 9.899a1 1 0 0 1-1.497-1.32l.083-.094l9.9-9.9Z"/>
                                     </g>
                                  </svg>
                               </i>
                            </a>

                            <a href="#" class="mt-1 mr-1 badge badge-danger" onclick="deleteData(parseInt('<%- material.id %>'))">
                               <i>
                                  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                                     <path fill="currentColor" d="M7 21q-.825 0-1.413-.588T5 19V6H4V4h5V3h6v1h5v2h-1v13q0 .825-.588 1.413T17 21H7ZM17 6H7v13h10V6ZM9 17h2V8H9v9Zm4 0h2V8h-2v9ZM7 6v13V6Z"/>
                                  </svg>
                               </i>
                            </a>
                         </td>
                      </tr>
                      <% }); %>
                   </tbody>
                </table>
             </div>
             <!-- /.table-responsive -->
          </div>
          <div class="card-body" id="materialForm" style="display: none;">
             <form id="addMaterialForm">
                <div class="form-group">
                    <label for="id">Code S/N</label>
                    <input type="text" class="form-control" id="id" name="id">
                 </div>
                <div class="form-group">
                   <label for="materialName">Name</label>
                   <input type="text" class="form-control" id="materialName" name="materialName">
                </div>
                <div class="form-group">
                    <label for="manufacturerName">Manufacturer</label>
                    <input type="text" class="form-control" id="manufacturerName" name="manufacturerName">
                 </div>
                <button type="submit" class="btn btn-primary">Submit</button>
             </form>
          </div>
          <!-- /.card-body -->
       </div>
       <!-- /.card -->
    </div>
    <!-- /.col -->
 </div>
 <script>
        let table = new DataTable('#material', {
            deferRender: true, // This option defers rendering of the table until required
            processing: true,  // Show a processing indicator while waiting for data
            // sort: false
        });

        const newButton = document.getElementById('newButton');
        const materialButton= document.getElementById('materialButton');
        const materialTable = document.getElementById('materialTable');
        const materialForm = document.getElementById('materialForm');
        const addMaterialForm = document.getElementById('addMaterialForm');
        
        newButton.addEventListener('click', () => {
            materialTable.style.display = 'none';
            materialForm.style.display = 'block';
            materialButton.style.display = "inline";
            newButton.style.display = "none";
        });
        materialButton.addEventListener("click", () => {
            materialForm.style.display = 'none';
            materialTable.style.display = 'table';
            materialButton.style.display = "none";
            newButton.style.display = "inline";
        }) 
        
        addMaterialForm.addEventListener('submit', (e) => {
            e.preventDefault();
        
            saveData();
            clearForm();
        });

        const saveData = () => {
            const codeSN = document.getElementById("id").value;
            const name = document.getElementById("materialName").value;
            const manufacturer = document.getElementById("manufacturerName").value;

            const data = {
               id: codeSN,
               name: name,
               manufacturer: manufacturer
            }

            fetch("/engineering/material", {
               method: "POST",
               headers: {
                  'Content-Type': 'application/json'
               },
               body: JSON.stringify(data)
            })
            .then((response) => response.json())
            .then(results => {
               Swal.fire({
                  title: "Success",
                  text: `${name} added.`,
                  icon: "success",
                  confirmButtonText: "OK"
               }).then((result) => {
                  // Jika tombol OK ditekan
                  if (result.isConfirmed) {
                     // Reload halaman
                     location.reload();
                  }
               });
            })
            .catch(error => {
               toastr.error(`Error add ${name} Cause ${error}.`, "Error");
            })
        }

         const clearForm = () => {
            document.getElementById("id").value = null;
            document.getElementById("materialName").value = null;
            document.getElementById("manufacturerName").value = null;
         }

         const deleteData = (id) => {

            fetch(`/engineering/material/${id}`, {
               method: "DELETE"
            })
            .then(response => response.json())
            .then(results => {
               document.getElementById(`material-${id}`).remove();
               toastr.warning(`Success Delete ${id}.`, `Warning!`);
            })
            .catch(error => toastr.error(`Error delete ${id} Cause ${error}.`, "Error"));
         }
 </script>