<div class="container mt-4">
    <!-- Nav tabs -->
    <ul class="nav nav-tabs">
        <li class="nav-item">
            <a class="nav-link active" data-toggle="tab" href="#userListTab">User List</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" data-toggle="tab" href="#addUser">Add User</a>
        </li>
    </ul>

    <!-- Tab panes -->
    <div class="tab-content mt-4">
        <!-- User List Tab -->
        <div id="userListTab" class="tab-pane fade show active">
            <table id="userList" class="table">
                <thead>
                    <tr>
                        <th>ID Employee</th>
                        <th>Username</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody id="userList">
                    <!-- Example user item -->
                    <% userList.forEach((data) => { %>
                        <tr>
                            <td><%- data.id %></td>
                            <td><%- data.username %></td>                           
                            <td>
                                <a href="#" class="mt-1 mr-1 badge badge-warning"><i>
                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><g fill="none"><path d="M24 0v24H0V0h24ZM12.593 23.258l-.011.002l-.071.035l-.02.004l-.014-.004l-.071-.035c-.01-.004-.019-.001-.024.005l-.004.01l-.017.428l.005.02l.01.013l.104.074l.015.004l.012-.004l.104-.074l.012-.016l.004-.017l-.017-.427c-.002-.01-.009-.017-.017-.018Zm.265-.113l-.013.002l-.185.093l-.01.01l-.003.011l.018.43l.005.012l.008.007l.201.093c.012.004.023 0 .029-.008l.004-.014l-.034-.614c-.003-.012-.01-.02-.02-.022Zm-.715.002a.023.023 0 0 0-.027.006l-.006.014l-.034.614c0 .012.007.02.017.024l.015-.002l.201-.093l.01-.008l.004-.011l.017-.43l-.003-.012l-.01-.01l-.184-.092Z"/><path fill="currentColor" d="M13 3a1 1 0 0 1 .117 1.993L13 5H5v14h14v-8a1 1 0 0 1 1.993-.117L21 11v8a2 2 0 0 1-1.85 1.995L19 21H5a2 2 0 0 1-1.995-1.85L3 19V5a2 2 0 0 1 1.85-1.995L5 3h8Zm6.243.343a1 1 0 0 1 1.497 1.32l-.083.095l-9.9 9.899a1 1 0 0 1-1.497-1.32l.083-.094l9.9-9.9Z"/></g></svg>
                                </i></a>                
                                <a href="#" class="mt-1 mr-1 badge badge-danger" onclick="deleteUser(parseInt('<%- data.id %>'))"><i>
                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="currentColor" d="M7 21q-.825 0-1.413-.588T5 19V6H4V4h5V3h6v1h5v2h-1v13q0 .825-.588 1.413T17 21H7ZM17 6H7v13h10V6ZM9 17h2V8H9v9Zm4 0h2V8h-2v9ZM7 6v13V6Z"/></svg>
                                </i></a>
                              </td>
                        </tr>
                    <% }); %>
                </tbody>
            </table>
        </div>

        <!-- Add User Tab -->
        <div id="addUser" class="tab-pane fade">
            <h3>Add User by Employee ID</h3>
            <!-- Form for adding users -->
            <form id="addEmployeeForm" action="#">
                <div style="display: inline-flex;">
                    <input type="text" id="employeeInput" class="form-control" placeholder="Employee ID" style="width: 50%;" name="employeeId" onkeydown="disableEnter(event)">
                    <button type="button" class="btn btn-primary ml-2" onclick="searchData()">Check Employee</button>
                </div>
            </form>
        </div>
        
        <!-- Employee Modal -->
        <div class="modal fade" id="employeeModal" tabindex="-1" role="dialog" aria-labelledby="employeeModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="employeeModalLabel">Employee Information</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body" id="employeeModalBody">
                        <!-- Employee data will be displayed here -->
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <!-- Example: Add User button inside modal footer -->
                        <button type="button" class="btn btn-primary" onclick="addUser()">Add User</button>
                    </div>
                </div>
            </div>
        </div>
        
    </div>
</div>

<script>
    let table = new DataTable('#userList', {
        sort: false
    });
    const employeeInput = document.getElementById('employeeInput');
    const searchData = () => {
    const inputNumber = parseInt(employeeInput.value);

    if (isNaN(inputNumber)) {
        Swal.fire({
            title: "Warning!",
            text: "Please Input in Number.",
            icon: "warning",
            confirmButtonText: "OK",
        });
    } else {
        fetch(`/employee/${inputNumber}`)
            .then((response) => response.json())
            .then((searchData) => {
                if (searchData.length === 0) {
                    Swal.fire({
                        title: "Not Found!",
                        text: "Theres nothing dude",
                        icon: "error",
                        confirmButtonText: "OK",
                    });
                } else {
                    const employeeId = searchData[0].id;
                    fetch(`/administrator/${employeeId}`)
                        .then((response) => response.json())
                        .then((employeeData) => {
                            // Display employee data in the modal
                            const modalBody = document.getElementById('employeeModalBody');
                            modalBody.innerHTML = `
                                <div><strong>Name:</strong> <span id="username" data-employee-name="${employeeData.name}">${employeeData.name}</span</div>
                                <div><strong>Position:</strong> <span id="department" data-department-id="${employeeData.department_id}">${employeeData.department_name}</span</div>
                            `;

                            // Show the modal
                            $('#employeeModal').modal('show');
                        });
                }
            })
            .catch((error) => {
                console.error('Error fetching search results:', error);
            });
        }
    }
    const disableEnter = (event) => {
        if (event.key === "Enter") {
            event.preventDefault();
        }
    }

    const addUser = () => {
        // Mengambil ID employee dari hasil input pencarian
        const id = document.getElementById("employeeInput").value;
        // Mengambil nilai dari elemen dengan ID "username"
        const usernameElement = document.getElementById("username");
        const usernameValue = usernameElement.dataset.employeeName;
        // Mengambil nilai dari elemen dengan ID "department"
        const departmentElement = document.getElementById("department");
        const departmentValue = departmentElement.dataset.departmentId;

        const data = {
            id: id,
            username: usernameValue,
            department_id: departmentValue
        }
        fetch("/administrator", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(data)
        })
        .then((response) => response.json())
        .then((results) => {
            Swal.fire({
                title: "Success Adding User",
                text: `User Added: ${data.username}`,
                icon: "success",
                confirmButtonText: "OK",
            }).then(() => {
                location.reload();
            })
        });
    }

    const deleteUser = (id) => {
        Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: "Yes, delete it!"
        })
        .then(result => {
            if(result.isConfirmed){
                fetch(`/administrator/${id}`,{
                    method: "DELETE"
                })
                .then(response => response.json())
                .then(results => {});
                Swal.fire({
                    title: "Deleted!",
                    text: "Data deleted successfully!",
                    icon: "success",
                    confirmButtonText: "OK"
                }).then((result) => {
                        // Jika tombol OK ditekan
                        if (result.isConfirmed) {
                            // Reload halaman
                            location.reload();
                        }
                });
            }
        });

    }

</script>