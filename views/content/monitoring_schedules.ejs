<link rel="stylesheet" href="../plugins/fullcalendar/main.css">
<div class="row center" >
    <div class="col-md-12">
      <div class="sticky-top mb-3">
        <div class="card">
          <div class="card-header">
            <h4 class="card-title">Shift</h4>
          </div>
          <div class="card-body">
            <!-- the events -->
            <div id="external-events">
              <div id="calendar"></div>
            </div>
          </div>
          <!-- /.card-body -->
        </div>
        <!-- /.card -->
      </div>
    </div>

    <!-- /.col -->
  </div>
  
<script src="../plugins/fullcalendar/main.js"></script>
<script>
    $(function () {
  
      /* initialize the external events
       -----------------------------------------------------------------*/
      function ini_events(ele) {
        ele.each(function () {
  
          // create an Event Object (https://fullcalendar.io/docs/event-object)
          // it doesn't need to have a start or end
          var eventObject = {
            title: $.trim($(this).text()) // use the element's text as the event title
          }
  
          // store the Event Object in the DOM element so we can get to it later
          $(this).data('eventObject', eventObject)
  
          // make the event draggable using jQuery UI
          $(this).draggable({
            zIndex        : 1070,
            revert        : true, // will cause the event to go back to its
            revertDuration: 0  //  original position after the drag
          })
  
        })
      }
  
      ini_events($('#external-events div.external-event'))
  
      /* initialize the calendar
       -----------------------------------------------------------------*/
      //Date for the calendar events (dummy data)
      var date = new Date()
      var d    = date.getDate(),
          m    = date.getMonth(),
          y    = date.getFullYear()
  
      var Calendar = FullCalendar.Calendar;
      var Draggable = FullCalendar.Draggable;
  
      var containerEl = document.getElementById('external-events');
      
      var calendarEl = document.getElementById('calendar');
  
      // initialize the external events
      // -----------------------------------------------------------------
  
      new Draggable(containerEl, {
        itemSelector: '.external-event',
        eventData: function(eventEl) {
          return {
            title: eventEl.innerText,
            backgroundColor: window.getComputedStyle( eventEl ,null).getPropertyValue('background-color'),
            borderColor: window.getComputedStyle( eventEl ,null).getPropertyValue('background-color'),
            textColor: window.getComputedStyle( eventEl ,null).getPropertyValue('color'),
          };
        }
      });
  
      var calendar = new Calendar(calendarEl, {
        // headerToolbar: {
        //   left  : 'prev,next today',
        //   center: 'title',
        //   right : 'dayGridMonth,timeGridWeek,timeGridDay'
        // },
        themeSystem: 'bootstrap',
        //Random default events
        events: [
          {
            title          : '1st 08.00 - 17.00',
            start          : new Date(y, m, 2),
            end            : new Date(y, m, 7),
            backgroundColor: '#00a65a', //red
            borderColor    : '#00a65a', //red
            allDay         : true
          },
          {
            title          : '2nd 20.00 - 05.00',
            start          : new Date(y, m, 2),
            end            : new Date(y, m, 7),
            backgroundColor: '#f39c12', //red
            borderColor    : '#f39c12', //red
            allDay         : true
          },
        ],
        editable  : false,
        droppable : false , // this allows things to be dropped onto the calendar !!!
        drop      : function(info) {
          // is the "remove after drop" checkbox checked?
          if (checkbox.checked) {
            // if so, remove the element from the "Draggable Events" list
            info.draggedEl.parentNode.removeChild(info.draggedEl);
          }
        }
      });
  
      calendar.render();
    })
  </script>