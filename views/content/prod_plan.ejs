<style>
    label {
  line-height: 190%;
  outline-style: none;
  transition: all .6s;
}

.hiddenCB div {
  display: inline;
  margin: 0;
  padding: 0;
  list-style: none;
}

.hiddenCB input[type="checkbox"],
.hiddenCB input[type="radio"] {
  display: none;
  
}

.hiddenCB label {
  
  cursor: pointer;
}

.hiddenCB input[type="checkbox"]+label:hover{
  background: rgba(0, 128, 128, .8);
}

.hiddenCB input[type="checkbox"]:checked+label {
  background: rgba(0, 128, 128, .4);
}

.hiddenCB input[type="checkbox"]:checked+label:hover{
  background: rgba(0, 128, 128, 0, .7);
}
</style>
<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header" style="display: flex; justify-content: space-between; align-items: center;">
              <h3 class="card-title">Production</h3>
              <span style="margin-left: auto;">Today's Date: <span id="realTime"></span></span> <!-- Example Date -->
            </div>
            <!-- /.card-header -->
            <div class="card-body">
              <!-- Nav tabs -->
              <ul class="nav nav-tabs" id="myTabs" role="tablist">
                <li class="nav-item">
                  <a class="nav-link active" id="productionPlan-tab" data-toggle="tab" href="#productionPlan" role="tab" aria-controls="productionPlan" aria-selected="true">Production Planned</a>
                </li>
                <li class="nav-item">
                  <a class="nav-link" id="newProductionPlan-tab" data-toggle="tab" href="#newProductionPlan" role="tab" aria-controls="newProductionPlan" aria-selected="false">New Plan</a>
                </li>
              </ul>
          
              <!-- Tab content -->
              <div class="tab-content" id="myTabContent">
                <!-- Production Control Tab -->
                <div class="tab-pane fade show active" id="productionPlan" role="tabpanel" aria-labelledby="productionPlan-tab">
                  <table id="example2" class="table table-bordered table-hover">
                    <thead>
                      <tr>
                        <th>ID</th>
                        <th>Line</th>
                        <th>Model</th>
                        <th>Shift</th>
                        <th>Control</th>
                      </tr>
                    </thead>
                    <tbody>
                      <% modelsMaterials.forEach((data) => { %>
                        <tr>
                          <td><%- data.id %></td>
                          <td><%- data.model_id %></td>
                          <td><%- data.material_id %></td>
                          <td>Change</span></td>
                        </tr>
                      <% }); %>
                    </tbody>
                  </table>
                </div>
          
                <!-- Production Plan Tab -->
                <div class="tab-pane fade" id="newProductionPlan" role="tabpanel" aria-labelledby="newProductionPlan-tab">
                  <!-- Content for Production Plan tab goes here -->
                  <div class="tab-pane fade show active" id="newProductionPlan" role="tabpanel" aria-labelledby="newProductionPlan-tab">
                    <form id="planForm" class="mt-4">
                        <div class="form-group">
                            <select class="form-control" name="formSelectModel" id="formSelectModel">
                              <option value="" disabled selected>Select Model</option>
                              <% models.forEach((data) => { %>
                                <option value="<%= data.id %>"><%= data.name %></option>
                              <% }); %>
                            </select>
                          </div>                          
                        <div class="form-group">
                            <form>
                                <div class="checkbox-boxes">
                                  <% materials.forEach((data) => { %>
                                    <label for="<%= data.id %>"><input type="checkbox" id="<%= data.id %>" name="item-material" value="<%= data.id %>"> <%= data.name %></label>
                                  <% }); %>
                                </div>
                              </form>                                                         
                        </div>
                    </form>
                    <button id="insert-plan" type="button" class="btn btn-warning text-right">Insert</button>
                  </div>
                </div>
              </div>
            </div>
            <!-- /.card-body -->
          </div>
          

       <!-- /.card -->
    </div>
    <div class="col-md-4">
        
        <div class="card">
            <div class="card-header" style="display: flex; justify-content: space-between; align-items: center;">
                <h3 class="card-title">Models</h3>
                
              </div>
            <!-- /.card-header -->
            <div class="card-body">
               <table id="example1" class="table table-bordered table-striped">
                  <thead>
                     <tr>
                        <th>Model ID</th>
                        <th>Product Name</th>
                        <th>Target</th>
                        <th>Inventory</th>
                     </tr>
                  </thead>
                  <tbody>
                      <% models.forEach((model) => { %>
                          <tr>
                             <td><%- model.id %></td>
                             <td><%- model.name %></td>
                             <td><%- model.target_quantity %></td>
                             <td>Not</span></td>
                          </tr>
                          <% }); %>
                  </tbody>
               </table>
               
            </div>
            <!-- /.card-body -->
         </div>
    </div>
    <!-- /.col -->
 </div>
 <script>
    function updateRealTime() {
     const now = new Date();
     const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit', second: '2-digit'};
     const formattedDateTime = now.toLocaleDateString('id-ID', options); // Sesuaikan dengan locale yang Anda inginkan
     
     document.getElementById('realTime').textContent = formattedDateTime;
    }
    
    // Update real-time setiap detik
    setInterval(updateRealTime, 1000);
    
    // Panggil update pertama kali saat halaman dimuat
    updateRealTime();
    const modelMaterials = [];
    function showSelectedItems() {
        var checkboxes = document.querySelectorAll('input[name="item-material"]:checked');
        modelMaterials.length = 0; // Mengosongkan array sebelum menambahkan item
        for (var i = 0; i < checkboxes.length; i++) {
            const value = checkboxes[i].value;
            if (!modelMaterials.includes(value)) {
                modelMaterials.push(value);
            }
        }   
    }   

    document.getElementById("insert-plan").addEventListener("click", () => {
        const modelSelect = document.getElementById("formSelectModel").value;
        const data = {
            modelId: modelSelect,
            materials: modelMaterials
        }
        showSelectedItems();
        Swal.fire({
            title: "Check Data!",
            text: `Data is Correct?`,
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: "Yes"
         }).then((result) => {
            if (result.isConfirmed) {
                fetch("/production/plan", {
                    method: "POST",
                    headers: {
                        'Content-Type': 'application/json'
                     },
                     body: JSON.stringify(data)
                })
                .then(response => response.json())
                .then(results => {
                    Swal.fire({
                        title: "Success!",
                        text: "Data inserted",
                        icon: "success",
                        confirmButtonText: "OK"
                    }).then((result) => {
                        // Jika tombol OK ditekan
                        if (result.isConfirmed) {
                            // Reload halaman
                            location.reload();
                        }
                    });
                })
            }
         })
    });
 </script>