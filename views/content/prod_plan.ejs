<style>
    label {
  line-height: 190%;
  outline-style: none;
  transition: all .6s;
}

.hiddenCB div {
  display: inline;
  margin: 0;
  padding: 0;
  list-style: none;
}

.hiddenCB input[type="checkbox"],
.hiddenCB input[type="radio"] {
  display: none;
  
}

.hiddenCB label {
  
  cursor: pointer;
}

.hiddenCB input[type="checkbox"]+label:hover{
  background: rgba(0, 128, 128, .8);
}

.hiddenCB input[type="checkbox"]:checked+label {
  background: rgba(0, 128, 128, .4);
}

.hiddenCB input[type="checkbox"]:checked+label:hover{
  background: rgba(0, 128, 128, 0, .7);
}
</style>
<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header" style="display: flex; justify-content: space-between; align-items: center;">
              <h3 class="card-title">Production</h3>
              <span style="margin-left: auto;">Today's Date: <span id="realTime"></span></span> <!-- Example Date -->
            </div>
            <!-- /.card-header -->
            <div class="card-body">
              <!-- Nav tabs -->
              <ul class="nav nav-tabs" id="myTabs" role="tablist">
                <li class="nav-item">
                  <a class="nav-link active" id="productionPlan-tab" data-toggle="tab" href="#productionPlan" role="tab" aria-controls="productionPlan" aria-selected="true">Production Planned</a>
                </li>
                <li class="nav-item">
                  <a class="nav-link" id="newProductionPlan-tab" data-toggle="tab" href="#newProductionPlan" role="tab" aria-controls="newProductionPlan" aria-selected="false">New Plan</a>
                </li>
              </ul>
          
              <!-- Tab content -->
              <div class="tab-content" id="myTabContent">
                <!-- Production Control Tab -->
                <div class="tab-pane fade show active" id="productionPlan" role="tabpanel" aria-labelledby="productionPlan-tab">
                  <table id="example2" class="table m-0 border-lr table-striped">
                    <thead>
                      <tr>
                        <th>ID</th>
                        <th>Model Name</th>
                        <th>Materials</th>
                        <th>Target</th>
                        <th>Control</th>
                      </tr>
                    </thead>
                    <tbody>
                      <% modelsMaterials.forEach((data) => { %>
                        <tr>
                          <td><%- data.model_id %></td>
                          <td><%- data.model_name %></td>
                          <td><%- data.materials_text %></td>
                          <td><%- data.model_target %></td>
                          <td style="display: flex; flex-wrap: wrap;  align-items: center; justify-content: center;" >
                            <a href="#" class="mt-1 mr-1 badge badge-warning edit-data" data-id="<%- data.id %>" onclick="editButtons(parseInt('<%- data.id %>'))">
                              <i>
                                 <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                                    <g fill="none">
                                       <path d="M24 0v24H0V0h24ZM12.593 23.258l-.011.002l-.071.035l-.02.004l-.014-.004l-.071-.035c-.01-.004-.019-.001-.024.005l-.004.01l-.017.428l.005.02l.01.013l.104.074l.015.004l.012-.004l.104-.074l.012-.016l.004-.017l-.017-.427c-.002-.01-.009-.017-.017-.018Zm.265-.113l-.013.002l-.185.093l-.01.01l-.003.011l.018.43l.005.012l.008.007l.201.093c.012.004.023 0 .029-.008l.004-.014l-.034-.614c-.003-.012-.01-.02-.02-.022Zm-.715.002a.023.023 0 0 0-.027.006l-.006.014l-.034.614c0 .012.007.02.017.024l.015-.002l.201-.093l.01-.008l.004-.011l.017-.43l-.003-.012l-.01-.01l-.184-.092Z"/>
                                       <path fill="currentColor" d="M13 3a1 1 0 0 1 .117 1.993L13 5H5v14h14v-8a1 1 0 0 1 1.993-.117L21 11v8a2 2 0 0 1-1.85 1.995L19 21H5a2 2 0 0 1-1.995-1.85L3 19V5a2 2 0 0 1 1.85-1.995L5 3h8Zm6.243.343a1 1 0 0 1 1.497 1.32l-.083.095l-9.9 9.899a1 1 0 0 1-1.497-1.32l.083-.094l9.9-9.9Z"/>
                                    </g>
                                 </svg>
                              </i>
                           </a>
                          </td>
                        </tr>
                      <% }); %>
                      
                    </tbody>
                  </table>
                </div>
          
                <!-- Production Plan Tab -->
                <div class="tab-pane fade" id="newProductionPlan" role="tabpanel" aria-labelledby="newProductionPlan-tab">
                  <!-- Content for Production Plan tab goes here -->
                  <div class="tab-pane fade show active" id="newProductionPlan" role="tabpanel" aria-labelledby="newProductionPlan-tab">
                    <form id="planForm" class="mt-4">
                        <div class="form-group">
                            <select class="form-control" name="formSelectModel" id="formSelectModel">
                              <option value="" disabled selected>Select Model</option>
                              <% models.forEach((data) => { %>
                                <option value="<%= data.id %>"><%= data.name %></option>
                              <% }); %>
                            </select>
                          </div>                          
                        <!-- <div class="form-group">
                            <form>
                                <div class="checkbox-boxes">
                                  <% materials.forEach((data) => { %>
                                    <label for="<%= data.id %>"><input type="checkbox" id="<%= data.id %>" name="item-material" value="<%= data.id %>"> <%= data.name %></label>
                                  <% }); %>
                                </div>
                              </form>                                                         
                        </div> -->
                    </form>
                    <button id="insert-plan" type="button" class="btn btn-warning text-right">Insert</button>
                  </div>
                </div>
              </div>
            </div>
            <!-- /.card-body -->
          </div>
          

       <!-- /.card -->
    </div>
    <!-- /.col -->
 </div>
 <script>
    function updateRealTime() {
     const now = new Date();
     const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit', second: '2-digit'};
     const formattedDateTime = now.toLocaleDateString('id-ID', options); // Sesuaikan dengan locale yang Anda inginkan
     
     document.getElementById('realTime').textContent = formattedDateTime;
    }
    
    // Update real-time setiap detik
    setInterval(updateRealTime, 1000);
    
    // Panggil update pertama kali saat halaman dimuat
    updateRealTime();
    const modelMaterials = [];
    function showSelectedItems() {
        var checkboxes = document.querySelectorAll('input[name="item-material"]:checked');
        modelMaterials.length = 0; // Mengosongkan array sebelum menambahkan item
        for (var i = 0; i < checkboxes.length; i++) {
            const value = checkboxes[i].value;
            if (!modelMaterials.includes(value)) {
                modelMaterials.push(value);
            }
        }   
    }   

    function editButtons(id) {
      
    }

    document.getElementById("insert-plan").addEventListener("click", () => {
        const modelSelect = document.getElementById("formSelectModel").value;
        const data = {
            modelId: modelSelect,
            materials: modelMaterials
        }
        showSelectedItems();
        Swal.fire({
            title: "Check Data!",
            text: `Data is Correct?`,
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: "Yes"
         }).then((result) => {
            if (result.isConfirmed) {
                fetch("/production/plan", {
                    method: "POST",
                    headers: {
                        'Content-Type': 'application/json'
                     },
                     body: JSON.stringify(data)
                })
                .then(response => response.json())
                .then(results => {
                    Swal.fire({
                        title: "Success!",
                        text: "Data inserted",
                        icon: "success",
                        confirmButtonText: "OK"
                    }).then((result) => {
                        // Jika tombol OK ditekan
                        if (result.isConfirmed) {
                            // Reload halaman
                            location.reload();
                        }
                    });
                })
            }
         })
    });
 </script>